let mapleader=','

" Vim Plugged
  call plug#begin('$HOME/vimfiles/plugged')
    Plug 'chriskempson/base16-vim'
    Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
    Plug 'pangloss/vim-javascript'
    Plug 'mxw/vim-jsx'
    Plug 'elzr/vim-json'
    Plug 'mattn/emmet-vim'
    Plug 'godlygeek/tabular'
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    Plug 'w0rp/ale'
    Plug 'kien/ctrlp.vim'
    Plug 'vimwiki/vimwiki'
    Plug 'tpope/vim-surround'
    Plug 'Raimondi/delimitMate'
    Plug 'othree/javascript-libraries-syntax.vim'
    Plug 'darthmall/vim-vue'
    Plug 'Valloric/YouCompleteMe'
    Plug 'ap/vim-css-color'
    Plug 'tpope/vim-fugitive'
  call plug#end()

runtime! C:\Program\ Files\ (x86)\Vim\vim80\macros\matchit.vim

" Basic Settings
  set autoindent
  set backspace=2
  set colorcolumn=-0
  set cursorline
  set encoding=utf-8
  set expandtab
  set foldcolumn=1
  set foldmethod=indent
  set guifont:Consolas:h11.7:cANSI:qDRAFT
  set guioptions=e
  set ignorecase
  set incsearch
  set laststatus=2
  set list
  "set listchars=tab:>,eol:¬,extends:<,precedes:>,trail:·
  set listchars=tab:>,extends:<,precedes:>,trail:·
  set mouse=a
  set noautochdir
  set nocompatible
  set nomousehide
  set noswapfile
  set nowrap
  set nonumber
  set nojoinspaces
  set relativenumber
  set numberwidth=3
  set selection=inclusive
  set shiftwidth=2
  set showcmd
  set showmatch
  set smartcase
  set smartindent
  set smarttab
  "set sidescrolloff=50
  set splitbelow
  set splitright
  set synmaxcol=10000
  set tabstop=2
  set textwidth=80
  set undodir=C:\Users\jodden\vimfiles\undo\
  set undofile
  set undolevels=1000
  set undoreload=10000
  set backup
  set backupext=.bak
  set backupdir=C:\Users\jodden\vimfiles\backup\
  set diffopt+=context:3
  set wildignore+=*\\node_modules\\*,*\\bootstrap-*\\*,*\\jquery-*\\*

" Emmet settings
  let g:user_emmet_leader_key = ','

" Ale settings
  let g:ale_html_htmlhint_options = "--config=C:/Users/jodden/.htmlhintrc --format=unix"
  "let g:ale_lint_on_text_changed = 'never'

" NERDTree
  let NERDTreeMinimalUI=1

" Vim-jsx
  let g:jsx_ext_required = 1

" YCM Settings
  "let g:ycm_autoclose_preview_window_after_completion = 1
  let g:ycm_min_num_of_chars_for_completion = 1

" Javascript plugin values
  let g:javascript_plugin_jsdoc = 1

" JS Lib settings
  let g:used_javascript_libs = 'underscore,jquery,vue,d3,jest'

" Airline settings
  let g:airline#extensions#whitespace#enabled = 0

" Indent Settings
  let g:html_indet_inctags = "html,body,head,tbody,div,article,section,footer,main,ul"
  let g:html_indet_autotags = "p,span,th,td,tr,tfoot,thead"
  let g:html_indent_script1 = "inc"
  let g:html_indent_style1 = "inc"

" Vimwiki settings
  let g:vimwiki_url_maxsave = 0
  let g:vimwiki_ext2synatx = {'.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}
  let work_wiki = {}
  let work_wiki.path = '~/Dropbox/work-wiki/'
  let work_wiki.path_html = '~/Dropbox/work-wiki-html/'
  let work_wiki.diary_rel_path = 'log/'
  let work_wiki.syntax = 'markdown'
  let work_wiki.ext = '.md'
  let private_wiki = {}
  let private_wiki.path = '~/Dropbox/private-wiki/'
  let private_wiki.path_html = '~/Dropbox/private-wiki-html/'
  let private_wiki.diary_rel_path = 'diary/'
  let private_wiki.syntax = 'markdown'
  let private_wiki.ext = '.md'
  let g:vimwiki_list = [work_wiki, private_wiki]
  let g:vimwiki_global_ext = 0

" Markdown Plugin settings
  let g:vim_markdown_folding_disabled = 1

" Custom mappings
  nno <left> <nop>
  nno <right> <nop>
  nno <up> <nop>
  nno <down> <nop>
  ino <left> <nop>
  ino <right> <nop>
  ino <up> <nop>
  ino <down> <nop>
  nno <C-V> <C-V>
  nno <leader>pi :PlugInstall<cr><C-L>
  nno <leader>pu :PlugUpdate<cr><C-L>
  nno <C-n><C-t> :NERDTreeToggle<cr>
  ino <C-n><C-t> <esc>:NERDTreeToggle<cr><C-w><C-l>a
  nno <leader>cd :colorscheme base16-material-darker<cr>
  nno <leader>cl :colorscheme base16-solarized-light<cr>
  " builds tags based on the current set working directory
  nno <leader>bt :execute 'silent !build_ctags.bat' '"'.getcwd().'"'<cr>
  nno <leader>wha :VimwikiAll2HTML<cr>
  nno <leader>ss :set spell!<cr>
  "nno <leader>so :syntax on<cr>
  nno <leader>c mvggvG$h"*y`v
  "nno <leader>px :%s!>!>!g <bar> :set filetype=xml <bar> =ggGddgg
  nno <leader>ns <C-w><C-v>:enew <bar> setlocal buftype=nofile <bar> setlocal bufhidden=hide <bar> setlocal noswapfile <bar> setlocal nobuflisted<cr>
  nno <leader>tc :VimwikiTOC<cr>
  vno <leader>c :Tab /,\zs<cr>
  nno G Gzz
  nno } }zz
  nno { {zz
  nno N Nzzzv
  nno n nzzzv
  nno * *zzzv
  nno # #zzzv

" Custom Functions
  function! SynStack()
    if !exists("*synstack")
      return
    endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
  endfunc

" Color scheme
  colorscheme base16-monokai
  "colorscheme base16-tomorrow-night
  "colorscheme base16-material-darker
  let g:airline_theme = 'base16_monokai'

" Set thing near the end in case of other plugins changing settings
  filetype plugin indent on
  syntax on

" Auto commands
  au FileType * set formatoptions=cqwnjb
  au BufNewFile,BufRead *.svg setf svg
  au BufNewFile,BufRead *.ashx setf cs
  au BufNewFile,BufRead *.cs setf cs
